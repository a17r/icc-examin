#!/bin/sh

TARGET=icc_examin
BINTARGET="`echo $TARGET | sed s/_//g`"
ERROR=0
test -f error.tmp && rm error.tmp

CONF_H=config.h
CONF=makefile
CONF_I18N=fl_i18n/makefile
SPEC=$TARGET.spec
VERS="$TARGET"_version.h

export CONF_H CONF CONF_I18N

VERSION_A=0
VERSION_B=4
VERSION_C=2
RELEASE=0
ZEIT="May 2004 - June 2006"
VERSION=$VERSION_A.$VERSION_B$VERSION_C
if [ $VERSION_A -gt 9 ]; then
  VERSION_L="$VERSION_A"
else
  VERSION_L="0$VERSION_A"
fi
if [ $VERSION_B -gt 9 ]; then
  VERSION_L="$VERSION_L$VERSION_B"
else
  VERSION_L="${VERSION_L}0$VERSION_B"
fi
if [ $VERSION_C -gt 9 ]; then
  VERSION_L="$VERSION_L$VERSION_C"
else
  VERSION_L="${VERSION_L}0$VERSION_C"
fi
VERSION_L=`echo $VERSION_L | sed 's/^0*//g'`

if [ $# -gt 0 ]; then
  prefix=""
  while [ $# -gt 0 ]; do
    arg=$1
    # prefix exec_prefix bindir sbindir libdir includedir datadir mandir
    switch=prefix
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      prefix="`echo \"$1\" | sed s/\"--$switch=\"//`"
    fi
    switch="exec-prefix"
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      exec_prefix="`echo $1 | sed s/--$switch=//`"
    fi
    switch=bindir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      bindir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=sbindir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      sbindir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=libdir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      libdir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=includedir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      includedir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=datadir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      datadir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=mandir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      mandir="`echo $1 | sed s/--$switch=//`"
    fi
    # pixmapdir desktopdir
    switch=pixmapdir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      pixmapdir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=desktopdir
    if [ "`echo \"$1\" | sed s/\"--$switch=\"//`" != "$1" ]; then
      desktopdir="`echo $1 | sed s/--$switch=//`"
    fi
    switch=help
    if [ "`echo \"$1\" | sed s/\"--$switch\"//`" != "$1" ]; then
      echo "Usage:"
      echo "   --prefix=[/usr/local]                package prefix"
      echo "   --exec-prefix=[\$prefix]              package exec-prefix"
      echo "   --bindir=[\$exec-prefix/bin]          binary installation path"
      echo "   --sbindir=[\$exec-prefix/sbin]        super user binary installation path"
      echo "   --libdir=[\$exec-prefix/lib]          library installation path"
      echo "   --includedir=[\$prefix/include]       include file installation"
      echo "   --datadir=[\$prefix/data]             application data base path"
      echo "   --mandir=[\$datadir/man]              manual installation path"
      echo "   --pixmapdir=[\$datadir/pixmaps]       icon installation path"
      echo "   --desktopdir=[\$datadir/applications] xdg installation path"
      echo ""
      echo "   --help"
      echo ""
      echo " Optionally set the CC and CXX environment variables."
      echo ""
      exit
    fi
    shift
  done
fi

src_dir="`(cd ..;pwd)`/""$TARGET"-"$VERSION"
srcdir="`pwd`"

test -f error.txt && rm error.txt
test -f mkdepend && rm mkdepend config.h

echo "# automatically generated file by configure - do not edit" > $CONF
echo "/* automatically generated file by configure - do not edit */" > $CONF_H
echo "" >> $CONF
echo "TARGET = $TARGET" >> $CONF
echo "BINTARGET = $BINTARGET" >> $CONF
echo "" >> $CONF

echo ""


# detect System

UNAME_=`uname`
OSUNAME=BSD
if [ $? = 0 ] && [ $UNAME_ = "Darwin" ]; then
  echo "Darwin PPC              detected"
  echo "APPLE = 1" >> $CONF
  echo "#define APPLE 1" >> $CONF_H
  echo "OSX_H =" >> $CONF
  OSUNAME=Darwin
else
  if [ $UNAME_ = "Linux" ]; then
    echo "LINUX = 1" >> $CONF
    echo "#define LINUX 1" >> $CONF_H
    echo "Linux system            detected"
    OSUNAME=Linux
  else
    if [ $UNAME_ = "SunOS" ]; then
      echo "SOLARIS = 1" >> $CONF
      echo "#define SOLARIS 1" >> $CONF_H
      echo "SunOS                   detected"
      OSUNAME=SunOS
    else
      if [ $UNAME_ = "OpenBSD" ] || [ $UNAME_ = "NetBSD" ] || [ $UNAME_ = "FreeBSD" ]; then
        echo "BSD = 1" >> $CONF
        ARCH=.bsd
        echo "#define BSD 1" >> $CONF_H
        echo "BSD $UNAME_             detected"
        OSUNAME=BSD
      else
        echo "ICC Examin may or may not compile on your $UNAME_ system"
      fi
    fi
  fi
fi
echo "MAKEFILE_ARCH = makefile$ARCH"  >> $CONF
MACH_=`uname -m`
MACH=BUILD_32
if [ $? = 0 ]; then
  if [ "$MACH_" = "i686" ]; then
    echo "32-bit system           detected"
  else
    if [ "$MACH_" = "x86_64" ]; then
      MACH=BUILD_64
      echo "BUILD_64 = 1" >> $CONF
      echo "X86_64                  will build in 64 bit mode"
    else
      if [ "$MACH_" = "sun4u" ]; then
        MACH=BUILD_64
        echo "BUILD_64 = 1" >> $CONF
        echo "spark ultra 4           will build in 64 bit mode"
      fi
    fi
  fi
fi
if [ $MACH = "BUILD_64" ]; then
  BARCH="64"
  LINE_ARCH="-64"
else
  BARCH=""
  LINE_ARCH=""
fi
LIBDIR="lib"$BARCH
export MACH OSUNAME LIBDIR BARCH LINE_ARCH


# prefix exec_prefix bindir sbindir libdir includedir datadir
if [ -z "$prefix" ]; then
  prefix=/usr/local
fi
if [ -z "$exec_prefix" ]; then
  exec_prefix="$prefix"
fi
if [ "`echo $exec_prefix | grep 64 | wc -l`" -eq "1" ]; then
  BARCH=""
  LIBDIR="lib"
  echo unset BARCH LIBDIR
  export BARCH LIBDIR
fi
if [ -z "$bindir" ]; then
  bindir="$exec_prefix/bin"
fi
if [ -z "$sbindir" ]; then
  sbindir="$exec_prefix/sbin"
fi
if [ -z "$libdir" ]; then
  libdir="$exec_prefix/$LIBDIR"
fi
if [ -z "$includedir" ]; then
  includedir="$prefix/include"
fi
if [ -z "$datadir" ]; then
  datadir="$prefix/share"
fi
if [ -z "$mandir" ]; then
  mandir="$datadir/man"
fi
# pixmapdir desktopdir
if [ -z "$pixmapdir" ]; then
  pixmapdir="$datadir/pixmaps"
fi
if [ -z "$desktopdir" ]; then
  desktopdir="$datadir/applications"
fi
export prefix exec_prefix bindir sbindir libdir includedir datadir mandir
export pixmapdir desktopdir

PATH=$bindir:$PATH
export PATH



# detect Libraries

echo "LIB=/"$LIBDIR >> $CONF


#export ELEKTRA=1
OYRANOS=1; export OYRANOS
LCMS=1; export LCMS
FTGL=2; export FTGL
FLTK=1; export FLTK
LIBPNG=2; export LIBPNG
#FLU=2; export FLU
if [ $OSUNAME != "Darwin" ]; then
X11=1;   export X11
fi
XINERAMA=1; export XINERAMA
XF86VMODE=1; export XF86VMODE
PO=1; export PO
./configure.sh
ELEKTRA=0; export ELEKTRA
OYRANOS=0; export OYRANOS
LCMS=0; export LCMS
FTGL=0; export FTGL
FLTK=0; export FLTK
LIBPNG=0; export LIBPNG
FLU=0; export FLU
X11=0; export X11
XINERAMA=0; export XINERAMA
XF86VMODE=0; export XF86VMODE
PO=0; export PO

echo ""
echo ""



# Alle ifdefs landen hier

echo "" >> $CONF
echo "VERSION_A = $VERSION_A" >> $CONF
echo "VERSION_B = $VERSION_B" >> $CONF
echo "VERSION_C = $VERSION_C" >> $CONF
echo "VERSION   = $VERSION" >> $CONF
echo "VERSION_L = $VERSION_L" >> $CONF
echo "" >> $CONF

echo "#ifndef ICC_VERSION_H" > $VERS
echo "#define ICC_VERSION_H" >> $VERS
echo "" >> $VERS
echo "#define ICC_EXAMIN_VERSION_A $VERSION_A" >> $VERS
echo "#define ICC_EXAMIN_VERSION_B $VERSION_B" >> $VERS
echo "#define ICC_EXAMIN_VERSION_C $VERSION_C" >> $VERS
echo "#define ICC_EXAMIN_VERSION $VERSION_L" >> $VERS
echo "#define ICC_EXAMIN_V \"$VERSION\"" >> $VERS
echo "#define ICC_EXAMIN_D _(\"$ZEIT\")" >> $VERS
echo "" >> $VERS
echo "#endif //ICC_VERSION_H" >> $VERS

echo "Version: $VERSION" > $SPEC
echo "Source:  $TARGET"-"$VERSION".tar.gz >> $SPEC
echo "Release: $RELEASE" >> $SPEC
echo "%define pixmapdir       $pixmapdir" >> $SPEC
echo "%define desktopdir      $desktopdir" >> $SPEC
cat  $SPEC.in >> $SPEC
echo $SPEC generated


echo "prefix =                $prefix"

echo ""
echo "################################################################"
echo "#                       Configuration                          #"
echo "prefix          =       $prefix"
echo "exec_prefix     =       $exec_prefix"
echo "bindir          =       $bindir"
echo "sbindir         =       $sbindir"
echo "libdir          =       $libdir"
echo "includedir      =       $includedir"
echo "datadir         =       $datadir"
echo "mandir          =       $mandir"
echo "pixmapdir       =       $pixmapdir"
echo "desktopdir      =       $desktopdir"
echo "################################################################"
echo ""

echo "src_dir = $src_dir" >> $CONF
echo "srcdir = $srcdir" >> $CONF
echo "prefix=$prefix" >> $CONF
echo "exec_prefix=$exec_prefix" >> $CONF
echo "bindir=$bindir" >> $CONF
echo "sbindir=$sbindir" >> $CONF
echo "libdir=$libdir" >> $CONF
echo "includedir=$includedir" >> $CONF
echo "datadir=$datadir" >> $CONF
echo "mandir=$mandir" >> $CONF
echo "pixmapdir=$pixmapdir" >> $CONF
echo "desktopdir=$desktopdir" >> $CONF
echo "" >> $CONF

echo "#define PREFIX         \"$prefix\"" >> $CONF_H
echo "#define DATADIR        \"$datadir\"" >> $CONF_H
echo "#define LOCALEDIR      \"$datadir/locale\"" >> $CONF_H
echo "#define PIXMAPDIR      \"$pixmapdir\"" >> $CONF_H
echo "#define SRCDIR         \"$srcdir\"" >> $CONF_H
echo "#define SRC_LOCALEDIR  \"$srcdir/po\"" >> $CONF_H

echo "" >> $CONF

if [ -z "$CC" ]; then
  CC=cc$LINE_ARCH
fi
if [ -z "$CXX" ]; then
  CXX=c++$LINE_ARCH
fi

echo "CXX = $CXX" >> $CONF
echo "CC = $CC" >> $CONF
echo "CXX = $CXX" > $CONF_I18N
echo "CC = $CC" >> $CONF_I18N
cat $CONF_I18N.in >> $CONF_I18N
echo $CONF_I18N prepared

echo "RM = rm -vf" >> $CONF
if [ $OSUNAME = "Darwin" ]; then
  echo "" >> $CONF
  echo "COPY = cp -pv" >> $CONF
  echo "DBG_LIBS = #-lMallocDebug" >> $CONF
  echo "I18N_LIB = -lintl \$(LIBNAME)" >> $CONF
  echo "I18N_LIBSTAT = /opt/local/lib/libintl.a \$(LIBNAME) #-liconv" >> $CONF
  echo "INCL=-I\$(includedir) -I/usr/X11R6/include -I./ -I/usr/include/gcc/darwin/default/c++" >> $CONF
  echo "LIBEXT = .dylib" >> $CONF
  echo "LINK_FLAGS = -dynamiclib -L." >> $CONF
  echo "MAKEDEPEND	= /usr/X11R6/bin/makedepend -Y" >> $CONF
  echo "MSGMERGE = msgmerge" >> $CONF
  echo "REZ = fltk-config --post \$@" >> $CONF
  echo "OPTS = -Wall -g \$(DEBUG) -DPIC -Wunused -fno-exceptions" >> $CONF
  echo "OSX_CPP = \$(OSX_CPPFILES)" >> $CONF
  echo "REZ = \
      fltk-config --post \$(BINTARGET);" >> $CONF
  echo "XGETTEXT_OPTIONS = --keyword=gettext \
        --keyword=_ \
        --keyword=N_" >> $CONF
  echo "INSTALL = install -v" >> $CONF
else
  echo "LIBMID = .so" >> $CONF
  echo "LIBNAMEFULL = lib\$(TARGET)\$(LIBMID).\$(VERSION_A).\$(VERSION_B).\$(VERSION_C)" >> $CONF
  echo "MSGMERGE = msgmerge" >> $CONF
  echo "MSGMERG_OPTS = --update" >> $CONF
  echo "XGETTEXT_OPTIONS = --keyword=gettext --flag=gettext:1:pass-c-format \
        --keyword=_ --flag=_:1:pass-c-format \
        --keyword=N_ --flag=N_:1:pass-c-format \
        --copyright-holder='Kai-Uwe Behrmann' \
        --msgid-bugs-address='ku.b@gmx.de' \
        --from-code=utf-8" >> $CONF
  if [ $OSUNAME = "Linux" ]; then
    echo "" >> $CONF
    echo "COPY = cp -vdpa" >> $CONF
    echo "I18N_LIB = \$(LIBNAME)" >> $CONF
    echo "I18N_LIBSTAT = \$(LIBNAME)" >> $CONF
    echo "INCL=-I\$(includedir) -I/usr/X11R6/include -I. -I/usr/include/g++ -I/usr/include" >> $CONF
    echo "LINK_FLAGS = -shared -ldl -fPIC -L." >> $CONF
    echo "LIBNAMEV = lib\$(TARGET)\$(LIBMID).\$(VERSION_A)" >> $CONF
    echo "LINK_FLAGS_STATIC = q" >> $CONF
    echo "LINK_NAME = -Wl,-soname -Wl,\$(LIBNAMEFULL)" >> $CONF
    echo "LINK_LIB_PATH = -Wl,--rpath -Wl,\$(libdir)" >> $CONF
    echo "LINK_SRC_PATH = -Wl,--rpath -Wl,\$(srcdir)" >> $CONF
    echo "MAKEDEPEND	= makedepend -Y" >> $CONF
    echo "OPTS= -Wall -g \$(DEBUG) -Wunused -fPIC -fno-exceptions #-Os -fomit-frame-pointer" >> $CONF
    echo "INSTALL = install -v" >> $CONF
  else
    echo "COPY = cp -p" >> $CONF
    echo "INCL=-I\$(includedir) -I/usr/X11R6/include -I. -I/usr/include/g++ -I/usr/include" >> $CONF
    if [ $OSUNAME = "BSD" ]; then
      echo "LINK_FLAGS = -shared \$(ICONV)" >> $CONF
      echo "INSTALL = install -v" >> $CONF
    else
      echo "LINK_FLAGS = -shared -ldl \$(ICONV)" >> $CONF
      echo "INSTALL = install" >> $CONF
    fi
    echo "I18N_LIB = \$(ICONV) -lintl \$(LIBNAMEV)" >> $CONF
    echo "I18N_LIBSTAT = \$(ICONV) -lintl \$(LIBNAMEV)" >> $CONF
    echo "MAKEDEPEND	= makedepend -Y" >> $CONF
    echo "OPTS = -Wall -g \$(DEBUG) -L. -fPIC" >> $CONF
    echo "RM = rm -f" >> $CONF
  fi
fi


echo "" >> $CONF
echo "" >> $CONF
echo ""
echo ""

echo "" > mkdepend

PREPARE_MAKEFILES=1; export PREPARE_MAKEFILES
MAKEFILES="makefile"; export MAKEFILES
./configure.sh

test -f error.tmp && ( ERROR=1; rm error.tmp )
if [ "$ERROR" -ne "0" ]; then
  echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  echo "!!!                     An ERROR occured                     !!!"
  echo "!!!                     See Log above                        !!!"
  echo "!!!                     remove  $CONF                     !!!"
  echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  echo ""
  rm $CONF $CONF_H $CONF_SH $SPEC $PKGC $MPKG
  exit
fi


if [ `cat error.txt | wc -l` -lt 1 ]; then
  rm error.txt
fi


