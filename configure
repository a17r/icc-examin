#!/bin/sh

TARGET=icc_examin
BINTARGET="`echo $TARGET | sed s/_//g`"
ERROR=0

CONF_H=config.h
CONF=makefile
SPEC=$TARGET.spec
VERS="$TARGET"_version.h

export CONF_H CONF

VERSION_A=0
VERSION_B=4
VERSION_C=0
RELEASE=0
VERSION=$VERSION_A.$VERSION_B$VERSION_C
if [ $VERSION_A -gt 9 ]; then
  VERSION_L="$VERSION_A"
else
  VERSION_L="0$VERSION_A"
fi
if [ $VERSION_B -gt 9 ]; then
  VERSION_L="$VERSION_L$VERSION_B"
else
  VERSION_L="${VERSION_L}0$VERSION_B"
fi
if [ $VERSION_C -gt 9 ]; then
  VERSION_L="$VERSION_L$VERSION_C"
else
  VERSION_L="${VERSION_L}0$VERSION_C"
fi
VERSION_L=`echo $VERSION_L | sed s/^0*//g`
ZEIT="May 2004 - May 2006"

src_dir="`(cd ..;pwd)`/""$TARGET"-"$VERSION"
srcdir="`pwd`"

test -f error.txt && rm error.txt
test -f mkdepend && rm mkdepend config.h


echo "# automatically generated file by configure - do not edit" > $CONF
echo "/* automatically generated file by configure - do not edit */" > $CONF_H
echo "" >> $CONF
echo "TARGET = $TARGET" >> $CONF
echo "BINTARGET = $BINTARGET" >> $CONF
echo "" >> $CONF

echo ""


# detect System

UNAME_=`uname`
OSUNAME=BSD
if [ $? = 0 ] && [ $UNAME_ = "Darwin" ]; then
  echo "Darwin PPC              detected"
  echo "APPLE = 1" >> $CONF
  echo "#define APPLE 1" >> $CONF_H
  echo "OSX_H =" >> $CONF
  OSUNAME=Darwin
else
  if [ $UNAME_ = "Linux" ]; then
    echo "LINUX = 1" >> $CONF
    echo "#define LINUX 1" >> $CONF_H
    OSUNAME=Linux
    echo "Linux system            detected"
  else
    if [ $UNAME_ = "SunOS" ]; then
      echo "SOLARIS = 1" >> $CONF
      echo "#define SOLARIS 1" >> $CONF_H
      echo "SunOS                   detected"
      OSUNAME=SunOS
    else
      if [ $UNAME_ = "OpenBSD" ] || [ $UNAME_ = "NetBSD" ] || [ $UNAME_ = "FreeBSD" ]; then
        echo "BSD = 1" >> $CONF
        ARCH=.bsd
        echo "#define BSD 1" >> $CONF_H
        echo "BSD $UNAME_             detected"
        OSUNAME=BSD
      else
        echo "ICC Examin may or may not compile on your $UNAME_ system"
      fi
    fi
  fi
fi
echo "MAKEFILE_ARCH = makefile$ARCH"  >> $CONF
MACH_=`uname -m`
MACH=BUILD_32
if [ $? = 0 ]; then
  if [ $MACH_ = "i686" ]; then
    echo "32-bit system           detected"
  else
    if [ $MACH_ = "x86_64" ]; then
      MACH=BUILD_64
      echo "BUILD_64 = 1" >> $CONF
      echo "X86_64                  will build in 64 bit mode"
    else
      if [ $MACH_ = "sun4u" ]; then
        MACH=BUILD_64
        echo "BUILD_64 = 1" >> $CONF
        echo "spark ultra 4           will build in 64 bit mode"
      fi
    fi
  fi
fi
if [ $MACH = "BUILD_64" ]; then
  BARCH="64"
  LINE_ARCH="-64"
else
  BARCH=""
  LINE_ARCH=""
fi
LIBDIR="lib"$BARCH
export MACH OSUNAME LIBDIR BARCH LINE_ARCH

if [ $# -gt 0 ]; then
  prefix=""
  while [ $# -gt 0 ]; do
    if [ "${1%--prefix=*}" != "$1" ]; then
      teste="${1#--prefix=*}"
      #echo "test: $teste $1"
    fi
    if [ "$teste" != "" ]; then
      prefix="$teste"
    fi
    shift
  done
else
  if [ $UNAME_ = "Darwin" ]; then
    prefix=/opt/local
  else
    prefix=/usr/local
  fi
fi



# detect Libraries

echo "LIB=/"$LIBDIR >> $CONF


#export ELEKTRA=1
export OYRANOS=1
export LCMS=1
export FTGL=2
export FLTK=1
export LIBPNG=2
#export FLU=2
export X11=1
export XINERAMA=1
export XF86VMODE=1
export PO=1
./configure.sh
export ELEKTRA=0
export OYRANOS=0
export LCMS=0
export FTGL=0
export FLTK=0
export LIBPNG=0
export FLU=0
export X11=0
export XINERAMA=0
export XF86VMODE=0
export PO=0
if [ $? -gt 0 ]; then
  ERROR=1
fi

echo ""
echo ""



# Alle ifdefs landen hier

echo "" >> $CONF
echo "VERSION_A = $VERSION_A" >> $CONF
echo "VERSION_B = $VERSION_B" >> $CONF
echo "VERSION_C = $VERSION_C" >> $CONF
echo "VERSION   = $VERSION" >> $CONF
echo "VERSION_L = $VERSION_L" >> $CONF
echo "" >> $CONF

echo "#ifndef ICC_VERSION_H" > $VERS
echo "#define ICC_VERSION_H" >> $VERS
echo "" >> $VERS
echo "#define ICC_EXAMIN_VERSION_A $VERSION_A" >> $VERS
echo "#define ICC_EXAMIN_VERSION_B $VERSION_B" >> $VERS
echo "#define ICC_EXAMIN_VERSION_C $VERSION_C" >> $VERS
echo "#define ICC_EXAMIN_VERSION $VERSION_L" >> $VERS
echo "#define ICC_EXAMIN_V \"$VERSION\"" >> $VERS
echo "#define ICC_EXAMIN_D _(\"$ZEIT\")" >> $VERS
echo "" >> $VERS
echo "#endif //ICC_VERSION_H" >> $VERS

echo "Version: $VERSION" > $SPEC
echo "Source:  $TARGET"-"$VERSION".tar.gz >> $SPEC
echo "Release: $RELEASE" >> $SPEC
cat  $SPEC.in >> $SPEC
echo $SPEC generated


echo "prefix =                $prefix"

echo "prefix = $prefix" >> $CONF
echo "libdir = \${prefix}/lib$BARCH" >> $CONF
echo "src_dir = $src_dir" >> $CONF
echo "srcdir = $srcdir" >> $CONF
echo "" >> $CONF
echo "#define PREFIX         \"$prefix\"" >> $CONF_H
echo "#define DATADIR        \"$prefix/share/\"" >> $CONF_H
echo "#define LOCALEDIR      \"$prefix/share/locale\"" >> $CONF_H
echo "#define SRCDIR         \"$srcdir\"" >> $CONF_H
echo "#define SRC_LOCALEDIR  \"$srcdir/po\"" >> $CONF_H

echo "" >> $CONF

echo "CXX = c++$LINE_ARCH" >> $CONF
echo "CC = cc$LINE_ARCH" >> $CONF
echo "RM = rm -vf" >> $CONF
if [ $OSUNAME = "Darwin" ]; then
  echo "" >> $CONF
  echo "COPY = cp -pv" >> $CONF
  echo "DBG_LIBS = #-lMallocDebug" >> $CONF
  echo "I18N_LIB = -lintl \$(LIBNAME)" >> $CONF
  echo "I18N_LIBSTAT = /opt/local/lib/libintl.a \$(LIBNAME) #-liconv" >> $CONF
  echo "INCL=-I\$(includedir) -I/usr/X11R6/include -I./ -I/usr/include/gcc/darwin/default/c++" >> $CONF
  echo "LIBEXT = .dylib" >> $CONF
  echo "LINK_FLAGS = -dynamiclib" >> $CONF
  echo "MAKEDEPEND	= /usr/X11R6/bin/makedepend -Y" >> $CONF
  echo "MSGMERGE = msgmergeMSGMERGE = msgmerge" >> $CONF
  echo "/Developer/Tools/Rez -t APPL mac.r -o \$@" >> $CONF
  echo "OPTS = -Wall -g \$(DEBUG) -DPIC -L. -Wunused -fno-exceptions" >> $CONF
  echo "OSX_CPP = \$(OSX_CPPFILES)" >> $CONF
  echo "REZ = \
      fltk-config --post \$(BINTARGET);" >> $CONF
  echo "XGETTEXT_OPTIONS = \ 
        --keyword=gettext \
        --keyword=_ \
        --keyword=N_" >> $CONF
else
  echo "LIBMID = .so" >> $CONF
  echo "LIBNAMEFULL = lib\$(TARGET)\$(LIBMID).\$(VERSION_A).\$(VERSION_B).\$(VERSION_C)" >> $CONF
  echo "MSGMERGE = msgmerge" >> $CONF
  echo "MSGMERG_OPTS = --update" >> $CONF
  echo "XGETTEXT_OPTIONS = \
        --keyword=gettext --flag=gettext:1:pass-c-format \
        --keyword=_ --flag=_:1:pass-c-format \
        --keyword=N_ --flag=N_:1:pass-c-format \
        --copyright-holder='Kai-Uwe Behrmann' \
        --msgid-bugs-address='ku.b@gmx.de' \
        --from-code=utf-8" >> $CONF
  if [ $OSUNAME = "Linux" ]; then
    echo "" >> $CONF
    echo "COPY = cp -vdpa" >> $CONF
    echo "I18N_LIB = \$(LIBNAME)" >> $CONF
    echo "I18N_LIBSTAT = \$(LIBNAME)" >> $CONF
    echo "INCL=-I\$(includedir) -I/usr/X11R6/include -I. -I/usr/include/g++ -I/usr/include" >> $CONF
    echo "LINK_FLAGS = -shared -ldl -fPIC -L." >> $CONF
    echo "LIBNAMEV = lib\$(TARGET)\$(LIBMID).\$(VERSION_A)" >> $CONF
    echo "LINK_FLAGS_STATIC = q" >> $CONF
    echo "LINK_NAME = -Wl,-soname -Wl,\$(LIBNAMEFULL)" >> $CONF
    echo "LINK_LIB_PATH = -Wl,--rpath -Wl,\$(libdir)" >> $CONF
    echo "LINK_SRC_PATH = -Wl,--rpath -Wl,\$(srcdir)" >> $CONF
    echo "MAKEDEPEND	= makedepend -Y" >> $CONF
    echo "OPTS= -Wall -g \$(DEBUG) -Wunused -fPIC -fno-exceptions #-Os -fomit-frame-pointer" >> $CONF
  else
    echo "COPY = cp -p" >> $CONF
    if [ $OSUNAME = "BSD" ]; then
      echo "LINK_FLAGS = -shared \$(ICONV)" >> $CONF
    else
      echo "LINK_FLAGS = -shared -ldl \$(ICONV)" >> $CONF
    fi
    echo "I18N_LIB = \$(ICONV) -lintl \$(LIBNAMEV)" >> $CONF
    echo "I18N_LIBSTAT = \$(ICONV) -lintl \$(LIBNAMEV)" >> $CONF
    echo "MAKEDEPEND	= makedepend -Y" >> $CONF
    echo "OPTS = -Wall -g -fpic \$(DEBUG) -L." >> $CONF
    echo "RM = rm -f" >> $CONF
  fi
fi


echo "" >> $CONF
echo "" >> $CONF
echo ""
echo ""

if [ $ERROR != 0 ]; then
  echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  echo "!!!                     An ERROR occured                     !!!"
  echo "!!!                     See Log above                        !!!"
  echo "!!!                     remove  $CONF                     !!!"
  echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
  echo ""
  rm $CONF $CONF_H $CONF_SH $SPEC $PKGC $MPKG
  exit
fi

echo "" > mkdepend

export PREPARE_MAKEFILES=1
export MAKEFILES="makefile"
./configure.sh


if [ `cat error.txt | wc -l` -lt 1 ]; then
  rm error.txt
fi


